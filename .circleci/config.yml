defaults: &defaults
  docker:
    - image: circleci/golang:1.11
  working_directory: ~/go/src/github.com/ipartington/sum

version: 2 # use CircleCI 2.0
jobs: # basic units of work in a run
  test: # runs not using Workflows must have a `build` job as entry point
    <<: *defaults
    environment: # environment variables for the build itself
      TEST_RESULTS: /tmp/test-results # path to where test results will be saved

    steps: # steps that comprise the `build` job
      - checkout # check out source code to working directory
      - run: mkdir -p ${TEST_RESULTS} # create the test results directory
      - restore_cache: # restores saved cache if no changes are detected since last run
      # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          keys:
            - v1-pkg-cache
      - run: go get 
      - run: go get github.com/jstemmer/go-junit-report
      - run: go get github.com/stretchr/testify/assert
  
      - run:
          name: Run unit tests
          command: |
            trap "go-junit-report <${TEST_RESULTS}/go-test.out > ${TEST_RESULTS}/go-test-report.xml" EXIT
            go test -v | tee ${TEST_RESULTS}/go-test.out


      - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: /tmp/test-results
      - store_artifacts: # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: /tmp/test-results
          destination: raw-test-output
  build: # runs not using Workflows must have a `build` job as entry point
    <<: *defaults
    steps: # steps that comprise the `build` job
      - checkout # check out source code to working directory
      - run: mkdir -p /tmp/dist # create the test results directory
      - run: go get 
      - run: go get github.com/stretchr/testify/assert
      - run: go get github.com/mitchellh/gox
      - run:
          name: cross compile
          command: |
            gox -os="linux darwin windows" -arch="amd64" -output="/tmp/dist/harbour_{{.OS}}_{{.Arch}}"
            cd /tmp/dist/ && gzip *
      - store_artifacts: # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: /tmp/dist
          destination: dist          
workflows:
  version: 2
  workflow:
    jobs:
      - build:
          context: dev-context
      - test:
          context: dev-context